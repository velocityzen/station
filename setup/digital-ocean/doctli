#!/bin/zsh
GITHUB_KEY_FILE=~/.ssh/github
HOST_KEY_FILE=~/.ssh/hosts
NEW_LOCATION=nyc3
NEW_SIZE=s-1vcpu-1gb
NEW_IMAGE=ubuntu-18-04-x64

if [ "$1" = keys ]; then
  doctl compute ssh-key list
  exit
fi

if [ "$1" = addkey ]; then
  doctl compute ssh-key import $USER --public-key-file $HOST_KEY_FILE
  exit
fi

# create <domain> <key_id>
if [ "$1" = create ]; then
  doctl compute droplet create $2 --region $NEW_LOCATION --size $NEW_SIZE --image $NEW_IMAGE --ssh-keys $3 --wait --format "ID,Name,PublicIPv4"
  exit
fi

# ssh <domain>
if [ "$1" = ssh ]; then
  doctl compute ssh $2
  exit
fi

# initial setup of the droplet
# init <domain>
if [ "$1" = init ]; then
  # sign in to 1password if there is no 1p session
  if ! [ -n "${OP_SESSION_my+1}" ]; then
    eval $(op signin my)
  fi
  # generate random password
  PASSWORD=$(openssl rand -base64 33)
  # create record in 1password
  ENCODED_ITEM=$(echo '{"sections":[{"fields":[{"k":"string","n":"username","t":"username","v":"deployer"},{"k":"concealed","n":"password","t":"password","v":"'"$PASSWORD"'"}],"name":"","title":""}]}' | op encode)
  op create item Server $ENCODED_ITEM  --title=$2

  doctl compute ssh $2 --ssh-command "export PASSWORD=$PASSWORD; $(</usr/local/bin/doctli-init.sh)"
  pubkey=$(<$HOST_KEY_FILE.pub)
  doctl compute ssh $2 --ssh-command "mkdir -p /home/deployer/.ssh && echo $pubkey >> /home/deployer/.ssh/authorized_keys && chown -R deployer:deployer /home/deployer"
  exit
fi

# install <domain> <git repo url>
if [ "$1" = install ]; then
  fullname=${3##*/}
  name="${fullname%.*}"
  eval "$(ssh-agent -s)"
  ssh-add $GITHUB_KEY_FILE
  doctl compute ssh deployer@$2 --ssh-agent-forwarding --ssh-command "git clone $3 && cd $name && npm i --production"
  exit
fi

if [ "$1" = domain ]; then
  exit
fi

echo """
  keys – list of available keys
  addkey – adds $HOST_KEY_FILE under $USER name
  create <name> <keyId> – creates $NEW_SIZE $NEW_IMAGE droplet in $NEW_LOCATION location
  ssh <name> – opens ssh connection to droplet with the <name>
  init <name> – initial setup for droplet with the name
  setup <name> <github repo url> – installs the github repo project onto <name> droplet
"""
